rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // --- Helper functions ---
    function isSignedIn() {
      return request.auth != null;
    }
    function isSuperAdmin() {
      return isSignedIn() && request.auth.token.role == "superAdmin";
    }
    function isAdmin(companyId) {
      return isSignedIn()
        && request.auth.token.role == "admin"
        && request.auth.token.companyId == companyId;
    }
    function isVendor(companyId) {
      return isSignedIn()
        && request.auth.token.role == "vendor"
        && request.auth.token.companyId == companyId;
    }
    // --- Companies ---
    match /companies/{companyId} {
      allow get: if isSuperAdmin() || isAdmin(companyId);
      allow list: if isSuperAdmin() || isAdmin(request.auth.token.companyId);
      allow write: if isSuperAdmin() || isAdmin(companyId);
    }
    // --- Subcollections ---
    match /companies/{companyId}/tasks/{taskId} {
      allow get: if isSuperAdmin() || isAdmin(companyId) || isVendor(companyId);
      allow list: if isSuperAdmin() || isAdmin(companyId) || isVendor(companyId);
      allow create, update, delete: if isSuperAdmin() || isAdmin(companyId) || isVendor(companyId);
    }
    match /companies/{companyId}/jobs/{jobId} {
      allow get: if isSuperAdmin() || isAdmin(companyId) || isVendor(companyId);
      allow list: if isSuperAdmin() || isAdmin(companyId) || isVendor(companyId);
      allow create, update, delete: if isSuperAdmin() || isAdmin(companyId);
    }
    match /companies/{companyId}/shares/{shareId} {
      allow get: if isSuperAdmin() || isAdmin(companyId) || isVendor(companyId);
      allow list: if isSuperAdmin() || isAdmin(companyId) || isVendor(companyId);
      allow create, update, delete: if isSuperAdmin() || isAdmin(companyId) || isVendor(companyId);
    }
    // --- Other collections (if needed) ---
    match /users/{userId} {
      allow get: if isSignedIn();
      allow list: if isSuperAdmin() || isAdmin(request.auth.token.companyId);
      allow write: if isSuperAdmin() || (isAdmin(request.resource.data.companyId) && request.auth.uid == userId);
    }
    match /vendors/{vendorId} { allow get, list, write: if false; } // Disable if not used
    match /files/{fileId} { allow get, list, create, update, delete: if false; } // Disable if not used
    match /shares/{shareId} { allow get, list, create, update, delete: if false; } // Disable if not used
    match /jobs/{jobId} { allow get, list, create, update, delete: if false; } // Disable if not used
  }
}